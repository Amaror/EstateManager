DROP TABLE estateagent;
DROP TABLE estate;
DROP TABLE house;
DROP TABLE apartment;
DROP TABLE contract;
DROP TABLE tenancycontract;
DROP TABLE purchasecontract;
DROP TABLE person;

CREATE TABLE estateagent(
	aid INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	name varchar(255) 	,
	address varchar(255) 	,
	login varchar(255) 	,
	password varchar(255)	
);
CREATE TABLE estate(
	id INTEGER		PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	city varchar(255) 	NOT NULL,
	postalcode INTEGER 	NOT NULL,
	street varchar(255) NOT NULL,
	streetnumber INTEGER NOT NULL,
	squarearea INTEGER 	NOT NULL,
	agentid INTEGER	,
	CONSTRAINT ref_agentid FOREIGN KEY(agentid) REFERENCES estateagent(aid)
);
CREATE TABLE apartment(
	floor INTEGER		,
	rent INTEGER		,
	rooms INTEGER 		,
	balcony SMALLINT		,
	builtinkitchen SMALLINT	,
	apartmentid INTEGER	,
	CONSTRAINT ref_estateida FOREIGN KEY(apartmentid) REFERENCES estate(id)
);
CREATE TABLE house(
	floors INTEGER		,
	price INTEGER 		,
	garden SMALLINT	,
	houseid INTEGER	,
	CONSTRAINT ref_estateidh FOREIGN KEY(houseid) REFERENCES estate(id)
);
CREATE TABLE person(
	pid INTEGER PRIMARY KEY NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	firstname varchar(255)	,
	lastname varchar(255)		,
	padress varchar(255)	
);
CREATE TABLE contract(
	cid INTEGER	PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
	date INTEGER		NOT NULL,
	placeid INTEGER	,	
	Constraint ref_placeid FOREIGN KEY(placeid) REFERENCES estate(id)
);
CREATE TABLE tenancycontract(
	startdate INTEGER	,
	duration INTEGER	,
	addcosts INTEGER	,
	tcontractid INTEGER	,
	CONSTRAINT ref_contractidt FOREIGN KEY(tcontractid) REFERENCES contract(cid),
	tbuyer INTEGER		,
	CONSTRAINT ref_buyert FOREIGN KEY(tbuyer) REFERENCES person(pid)
);
CREATE TABLE purchasecontract(
	nooinstallments INTEGER	,
	interestrate INTEGER 	,
	pcontractid INTEGER		,
	CONSTRAINT ref_contractidp FOREIGN KEY(pcontractid) REFERENCES contract(cid),
	pbuyer INTEGER			,
	CONSTRAINT ref_buyerp FOREIGN KEY(pbuyer) REFERENCES person(pid)
);